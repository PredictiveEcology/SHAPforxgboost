% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SHAP_funcs.R
\name{plot.shap.summary}
\alias{plot.shap.summary}
\title{SHAP summary plot core function using the long-format SHAP values}
\usage{
\method{plot}{shap.summary}(data_long, x_bound = NULL, dilute = FALSE,
  scientific = F)
}
\arguments{
\item{x_bound}{in case need to limit x_axis_limit}

\item{dilute}{by default print all data, but that would be slow}

\item{scientific}{default to F, "%.1e", show the mean|SHAP| in scientific format or not}

\item{data_long:}{a long format data of SHAP values}

\item{dilute}{a number or logical, dafault to TRUE, will plot \code{nrow(data_long)/dilute} data
for example, if dilute = 5 will plot 1/5 of the data.
If dilute = TRUE or a number, we will plot at most 1,500 points per feature, so the plot won't be too slow
If you put dilute over}
}
\description{
The summary plot (sina plot) using a long-format data of SHAP values.
If you want to start with xgbmodel and data_X, use \code{\link{plot.shap.summary.wrap1}}.
If you want to use self-derived SHAP matrix, use \code{\link{plot.shap.summary.wrap2}}.
}
\examples{
library(SHAPforxgboost)
data("iris")
X1 = as.matrix(iris[,-5])
mod1 = xgboost::xgboost(
  data = X1, label = iris$Species, gamma = 0, eta = 1, lambda = 0,nrounds = 1, verbose = F)

# shap.values() has the SHAP data matrix and ranked features by mean|SHAP|
shap_values <- shap.values(mod1, X1)
shap_values$mean_shap_score

# shap.prep() returns the long-format SHAP data
shap_long <- shap.prep(shap_values, X1)

# **SHAP summary plot**
plot.shap.summary(shap_long)

# Alternatives:
# option 1: from the xgboost model
plot.shap.summary.wrap1(mod1, X1, top_n = 3)

# option 2: supply a self-made SHAP values dataset (e.g. sometimes as output from cross-validation)
plot.shap.summary.wrap2(shap_score = shap_values$shap_score, X1, top_n = 3)
}
